@page "/shipments/{code:required}/{zipCode:required}"
@using Elegance.Extensions
@using Elegance.Icons
@using Microsoft.AspNetCore.Components.Routing
@using Nebula.Extensions
@using Nebula.Models.Common
@using Nebula.Web.Components
@using Nebula.Web.Components.Shipments
@rendermode RenderModes.Interactive

@if (!loading && shipment == default)
{
	<title>@(Localizer["title"])</title>

	<div class="mt-4 notification is-danger">
		<p>@(Localizer["not-found.title"])</p>
		<a href="/" class="button is-small is-dark">
			<span class="icon is-small">
				@(Icons.ChevronLeft)
			</span>
			<span>@(Localizer["not-found.button"])</span>
		</a>
	</div>
}
else
{
	<title>@(shipment.TrackingCode)</title>

	<section class="hero">
		<div class="hero-body is-position-relative @(loading ? "skeleton-lines" : string.Empty)">
			<div class="title is-flex is-gap-1">
				<span class="icon is-large">
					@(ShipmentSourceIcon.Component(shipment.Source))
				</span>

				<h1>@(shipment.TrackingCode)</h1>
			</div>
			<div class="subtitle">
				<p>@(Summary)</p>

				@if ((shipment.State != ShipmentState.Delivered) && (shipment.Eta != default))
				{
					<p class="mt-2">
						@(string.Format(Localizer["expected"], shipment.Eta))
					</p>
				}
			</div>

			@if (shipment != default)
			{
				<div class="action-buttons">
					<Automation Shipment="@(shipment)" />

					<a href="@(Urls.GetOriginalTrackingUrl(Code, ZipCode, shipment.Source))"
					   target="_blank"
					   rel="noreferrer"
					   class="button"
					   title="Open shipment at @(shipment.Source.ToString())">
						<span class="icon is-small">
							@(Icons.ExternalLink)
						</span>
					</a>
				</div>
			}
		</div>
	</section>

	@if (shipment.RelatedTrackingCodes is not null)
	{
		<div class="mb-5">
			<h3 class="title is-5">@(Localizer["related.title"])</h3>

			@foreach (var trackingCode in shipment.RelatedTrackingCodes)
			{
				var href = Urls.GetTrackingUrl(trackingCode, ZipCode, shipment.Source);

				<NavLink @key="(trackingCode)" href="@(href)" class="is-block">
					@(trackingCode)
				</NavLink>
			}
		</div>
	}

	@if (shipment.Delay >= TimeSpan.FromMinutes(15))
	{
		<p class="mb-5">@(Localizer["delay.text"])</p>

		<a href="@(Urls.GetOriginalTrackingUrl(Code, ZipCode, shipment.Source))"
		   target="_blank"
		   rel="noreferrer"
		   class="button is-flex"
		   title="Open shipment at @(shipment.Source.ToString())">
			<span class="icon is-small">
				@(Icons.ExternalLink)
			</span>
			<span>@(Localizer["delay.button"])</span>
		</a>
	}

	@if (Letter)
	{
		<p class="mb-5">@(Localizer["letter"])</p>
	}

	<div class="fixed-grid has-1-cols has-2-cols-tablet">
		<div class="grid is-gap-3">
			<div class="cell">
				<h2 class="title is-4">@(Localizer["recipient.title"])</h2>
				<div class="@(LoadingBlockClass)">
					@if (shipment.Recipient.Name is not null)
					{
						<p>@(shipment.Recipient.Name)</p>
					}

					<p>@(shipment.Recipient.Street) @(shipment.Recipient.HouseNumber) @(shipment.Recipient.HouseNumberSuffix ?? string.Empty)</p>
					<p>@(shipment.Recipient.ZipCode) @(shipment.Recipient.Place)</p>
				</div>
			</div>

			<div class="cell">
				<h2 class="title is-4">@(Localizer["sender.title"])</h2>
				<div class="@(LoadingBlockClass)">
					@if (shipment.Sender.Name is not null)
					{
						<p>@(shipment.Sender.Name)</p>
					}

					<p>@(shipment.Sender.Street) @(shipment.Sender.HouseNumber) @(shipment.Sender.HouseNumberSuffix ?? string.Empty)</p>
					<p>@(shipment.Sender.ZipCode) @(shipment.Sender.Place)</p>
				</div>
			</div>

			<div class="cell">
				<h2 class="title is-4">@(Localizer["details.title"])</h2>

				<div class="@(LoadingBlockClass)">
					<p class="mb-1">@(shipment.Details.WeightKg)</p>
					<p>@(shipment.Details.DimensionsCm)</p>
				</div>
			</div>

			<div class="cell">
				<h2 class="title is-4">@(Localizer["events.title"])</h2>

				<div class="@(LoadingBlockClass)">
					@if ((shipment.Events is not null) && (shipment.Events.Length != 0))
					{
						for (var i = 0; i < shipment.Events.Length; i++)
						{
							var @event = shipment.Events[i];
							var @class = i < (shipment.Events.Length - 1) ? "mb-5" : string.Empty;

							<div @key="@(@event.Key.Str())" class="@(@class)">
								<h4 class="title is-6 mb-1">@(ShipmentStateLocalizer[@event.State.ToString()])</h4>
								<small>@(@event.Timestamp.ToString("g"))</small>
								@if (@event.Description is not null)
								{
									<p>@(@event.Description)</p>
								}
							</div>
						}
					}
					else
					{
						<p>@(Localizer["events.empty"])</p>
					}
				</div>
			</div>
		</div>
	</div>

	<div class="@(LoadingBlockClass)">
		<p>@(string.Format(Localizer["created"], shipment.Created))</p>
		<p>@(string.Format(Localizer["updated"], shipment.Updated))</p>
	</div>
}
